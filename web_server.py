#!/usr/bin/env python3
"""
–í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è health check –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ Telegram –±–æ—Ç–∞.
–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –¥–µ–ø–ª–æ—è –≤ Replit Deployments.
"""

import os
import threading
import subprocess
import sys
from flask import Flask, jsonify, render_template_string
from datetime import datetime

app = Flask(__name__)

# HTML —à–∞–±–ª–æ–Ω –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
INDEX_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>Telegram Time Tracking Bot</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
            margin: 0; padding: 20px; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; min-height: 100vh;
        }
        .container { 
            max-width: 800px; margin: 0 auto; 
            background: rgba(255,255,255,0.1); 
            padding: 30px; border-radius: 15px;
            backdrop-filter: blur(10px);
        }
        .header { text-align: center; margin-bottom: 40px; }
        .header h1 { font-size: 2.5em; margin: 0; text-shadow: 2px 2px 4px rgba(0,0,0,0.3); }
        .status { 
            display: flex; justify-content: space-around; 
            margin: 30px 0; flex-wrap: wrap; gap: 20px;
        }
        .status-card { 
            background: rgba(255,255,255,0.15); 
            padding: 20px; border-radius: 10px; 
            text-align: center; flex: 1; min-width: 200px;
        }
        .status-title { font-size: 1.1em; margin-bottom: 10px; opacity: 0.9; }
        .status-value { font-size: 1.8em; font-weight: bold; }
        .features { margin: 30px 0; }
        .feature { 
            background: rgba(255,255,255,0.1); 
            margin: 10px 0; padding: 15px 20px; 
            border-radius: 8px; border-left: 4px solid #00ff88;
        }
        .buttons { text-align: center; margin-top: 30px; }
        .btn { 
            background: rgba(255,255,255,0.2); 
            color: white; border: 2px solid rgba(255,255,255,0.3);
            padding: 12px 24px; margin: 0 10px; 
            border-radius: 25px; text-decoration: none;
            transition: all 0.3s ease;
        }
        .btn:hover { 
            background: rgba(255,255,255,0.3); 
            transform: translateY(-2px);
        }
        .footer { 
            text-align: center; margin-top: 40px; 
            opacity: 0.7; font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ü§ñ Telegram Time Tracking Bot</h1>
            <p>–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Jira –∏ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –¥–æ—Å—Ç—É–ø–æ–º</p>
        </div>
        
        <div class="status">
            <div class="status-card">
                <div class="status-title">–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</div>
                <div class="status-value" style="color: #00ff88;">{{ bot_status }}</div>
            </div>
            <div class="status-card">
                <div class="status-title">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</div>
                <div class="status-value" style="color: #00ff88;">{{ db_status }}</div>
            </div>
            <div class="status-card">
                <div class="status-title">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</div>
                <div class="status-value">{{ uptime }}</div>
            </div>
        </div>
        
        <div class="features">
            <h3>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:</h3>
            <div class="feature">‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–¥–∞—á</div>
            <div class="feature">üîó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö Jira-—Å—Å—ã–ª–æ–∫</div>
            <div class="feature">üåç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
            <div class="feature">‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ä–∞–±–æ—á–µ–º—É –¥–Ω—é</div>
            <div class="feature">üìä –î–Ω–µ–≤–Ω—ã–µ —Å–≤–æ–¥–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
            <div class="feature">üë• –ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</div>
            <div class="feature">üèñÔ∏è –†–µ–∂–∏–º –æ—Ç–¥—ã—Ö–∞ –∏ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤</div>
        </div>
        
        <div class="buttons">
            <a href="/health" class="btn">ü©∫ Health Check</a>
            <a href="/logs" class="btn">üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤</a>
            <a href="/api/status" class="btn">üì° API Status</a>
        </div>
        
        <div class="footer">
            <p>–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ Replit Deployments | –û–±–Ω–æ–≤–ª–µ–Ω–æ: {{ last_update }}</p>
        </div>
    </div>
</body>
</html>
"""

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞
start_time = datetime.now()
bot_process = None

def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    global bot_process
    try:
        bot_process = subprocess.Popen([sys.executable, 'simple_main.py'])
        print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞: {e}")
        return False

def get_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞"""
    global bot_process
    if bot_process and bot_process.poll() is None:
        return "–ê–∫—Ç–∏–≤–µ–Ω"
    return "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

def get_uptime():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã"""
    uptime = datetime.now() - start_time
    hours = int(uptime.total_seconds() // 3600)
    minutes = int((uptime.total_seconds() % 3600) // 60)
    return f"{hours}—á {minutes}–º"

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–æ—Ç–µ"""
    return render_template_string(INDEX_TEMPLATE,
                                bot_status=get_bot_status(),
                                db_status="–ü–æ–¥–∫–ª—é—á–µ–Ω–∞",
                                uptime=get_uptime(),
                                last_update=datetime.now().strftime('%d.%m.%Y %H:%M'))

@app.route('/health')
def health_check():
    """Health check endpoint –¥–ª—è Replit Deployments"""
    return jsonify({
        'status': 'healthy',
        'service': 'telegram-time-tracking-bot',
        'timestamp': datetime.now().isoformat(),
        'bot_status': get_bot_status(),
        'database': 'connected',
        'uptime_seconds': int((datetime.now() - start_time).total_seconds())
    })

@app.route('/api/status')
def api_status():
    """API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
    return jsonify({
        'bot': {
            'status': get_bot_status(),
            'uptime': get_uptime(),
            'process_id': bot_process.pid if bot_process else None
        },
        'web_server': {
            'status': 'running',
            'port': 5000
        },
        'database': {
            'status': 'connected',
            'type': 'PostgreSQL'
        },
        'system': {
            'start_time': start_time.isoformat(),
            'current_time': datetime.now().isoformat()
        }
    })

@app.route('/logs')
def logs_redirect():
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–æ–≥–æ–≤"""
    return '''
    <script>
        // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –ª–æ–≥–∏ –Ω–∞ —Ç–æ–º –∂–µ —Ö–æ—Å—Ç–µ —Å –ø–æ—Ä—Ç–æ–º 5001
        const currentHost = window.location.hostname;
        const logsUrl = `http://${currentHost}:5001`;
        window.location.href = logsUrl;
    </script>
    <p>–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–æ–≥–æ–≤...</p>
    <p>–ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</p>
    <p><a href="http://localhost:5001">–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–æ–≥–æ–≤</a></p>
    '''

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Telegram –±–æ—Ç–∞...")
    print("üìä –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:5000")
    print("ü©∫ Health check: http://localhost:5000/health")
    
    # –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = threading.Thread(target=start_telegram_bot, daemon=True)
    bot_thread.start()
    
    # –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    app.run(host='0.0.0.0', port=5000, debug=False)