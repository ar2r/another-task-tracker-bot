name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
      BOT_TOKEN: test_token_for_ci
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: test_user
      PGPASSWORD: test_password
      PGDATABASE: test_db

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install UV package manager
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -r pyproject.toml --extra-index-url https://download.pytorch.org/whl/cpu
        uv pip install pytest pytest-asyncio pytest-mock pytest-cov python-telegram-bot psycopg2-binary pytz
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U test_user; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
    
    - name: Run database setup
      run: |
        source .venv/bin/activate
        python -c "from database import init_database; init_database()"
    
    - name: Run tests with coverage
      run: |
        source .venv/bin/activate
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=html --cov-fail-under=75
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          htmlcov/
          coverage.xml
          pytest-report.xml